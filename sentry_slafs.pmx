---
name: Sentry with Postgres and Celery (on Redis)
description: a template for running Sentry with PostgreSQL database and Celery with Redis
keywords: sentry postgres redis celery django python error logging ruby rails
type: Default
documentation:  |-

  ## Sentry

  [Sentry](https://www.getsentry.com) is an event logging platform primarily focused on capturing and aggregating exceptions.

  ## Setup

  After succesfully deploying this template, you'll have to forward only one HTTP port (9000).

  You should also change environment variables on both ``sentry_www`` and ``sentry_celery`` images.
  Most importantly change SECRET_KEY and SENTRY_URL_PREFIX.
  For more info about meaning of each environment variable refer to [slafs/sentry](https://github.com/slafs/sentry-docker) docker image documentation.

  ### Port-Forwarding

  If using Virtual Box, use the following command in your local machine's terminal window to create the port forwarding rules:
  ```
  $ VBoxManage controlvm panamax-vm natpf1 sentry,tcp,,8997,,9000
  ```

  ### Launch

  After all containers are deployed, simply point your browser to http://localhost:8997/

images:
- name: sentry_www
  source: slafs/sentry:latest
  category: webapp
  type: Default
  ports:
  - host_port: '9000'
    container_port: '9000'
    proto: TCP
  links:
  - service: redis
    alias: redis
  - service: postgres
    alias: postgres
  command: start
  environment:
  - variable: SECRET_KEY
    value: change_me
  - variable: SENTRY_URL_PREFIX
    value: http://sentry.mydomain.com
  - variable: DATABASE_URL
    value: postgres://postgres:@postgres/postgres
  - variable: SENTRY_ADMIN_USERNAME
    value: admin
  - variable: SENTRY_ADMIN_PASSWORD
    value: admin
  - variable: SENTRY_ADMIN_EMAIL
    value: root@localhost
  - variable: CACHE_URL
    value: hiredis://redis:6379/2/
  - variable: SENTRY_USE_REDIS_BUFFERS
    value: 'True'
  - variable: SENTRY_REDIS_BUFFERS
    value: redis:6379
  - variable: CELERY_ALWAYS_EAGER
    value: 'False'
  - variable: SENTRY_BROKER_URL
    value: redis://redis:6379/1/
  - variable: SENTRY_WORKERS
    value: '3'
  - variable: SENTRY_EMAIL_BACKEND
    value: django.core.mail.backends.console.EmailBackend
  - variable: SENTRY_EMAIL_HOST
    value: localhost
  - variable: SENTRY_EMAIL_HOST_PASSWORD
    value: ''
  - variable: SENTRY_EMAIL_HOST_USER
    value: ''
  - variable: SENTRY_EMAIL_PORT
    value: '25'
  - variable: SENTRY_EMAIL_USE_TLS
    value: 'False'
  - variable: SENTRY_SERVER_EMAIL
    value: root@localhost
- name: redis
  source: redis:latest
  category: storage
  type: Default
- name: postgres
  source: postgres:latest
  category: storage
  type: Default
- name: sentry_celery
  source: slafs/sentry:latest
  category: workers
  type: Default
  command: "celery worker -B"
  links:
  - service: redis
    alias: redis
  - service: postgres
    alias: postgres
  environment:
  - variable: SECRET_KEY
    value: change_me
  - variable: SENTRY_URL_PREFIX
    value: http://sentry.mydomain.com
  - variable: DATABASE_URL
    value: postgres://postgres:@postgres/postgres
  - variable: SENTRY_ADMIN_USERNAME
    value: admin
  - variable: SENTRY_ADMIN_PASSWORD
    value: admin
  - variable: SENTRY_ADMIN_EMAIL
    value: root@localhost
  - variable: CACHE_URL
    value: hiredis://redis:6379/2/
  - variable: SENTRY_USE_REDIS_BUFFERS
    value: 'True'
  - variable: SENTRY_REDIS_BUFFERS
    value: redis:6379
  - variable: CELERY_ALWAYS_EAGER
    value: 'False'
  - variable: SENTRY_BROKER_URL
    value: redis://redis:6379/1/
  - variable: SENTRY_WORKERS
    value: '3'
  - variable: SENTRY_EMAIL_BACKEND
    value: django.core.mail.backends.console.EmailBackend
  - variable: SENTRY_EMAIL_HOST
    value: localhost
  - variable: SENTRY_EMAIL_HOST_PASSWORD
    value: ''
  - variable: SENTRY_EMAIL_HOST_USER
    value: ''
  - variable: SENTRY_EMAIL_PORT
    value: '25'
  - variable: SENTRY_EMAIL_USE_TLS
    value: 'False'
  - variable: SENTRY_SERVER_EMAIL
    value: root@localhost
